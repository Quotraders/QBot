# BotCore Integration Template for GitHub Actions Workflows
# Add these steps to the end of each workflow (before final commit)

      - name: "ðŸ”— Integrate with BotCore Decision Engine"
        run: |
          echo "ðŸ”— Converting workflow analysis to BotCore format..."
          
          # Run data integration script
          python Intelligence/scripts/workflow_data_integration.py \
            --workflow-type "${GITHUB_WORKFLOW}" \
            --data-path "Intelligence/data/latest_analysis.json" \
            --output-path "Intelligence/data/integrated/${GITHUB_WORKFLOW}_integrated.json"
          
          echo "âœ… BotCore integration complete"

      - name: "ðŸ“¤ Commit Integrated Data"
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Intelligence/data/integrated/
          git add Intelligence/data/
          git diff --quiet || git commit -m "ðŸ¤– ${GITHUB_WORKFLOW}: BotCore-integrated analysis $(date -u +%Y%m%d_%H%M%S)"
          git push || echo "No changes to push"

# Workflow-Specific Data Path Examples:
# es_nq_critical_trading: "data/es_nq/latest_analysis.json"
# portfolio_heat: "data/portfolio/heat_management.json" 
# ultimate_news_sentiment_pipeline: "Intelligence/data/news_sentiment.json"
# ultimate_regime_detection_pipeline: "Intelligence/data/regime_analysis.json"
# volatility_surface: "Intelligence/data/volatility_data.json"
# microstructure: "Intelligence/data/microstructure_analysis.json"
# es_nq_correlation_matrix: "Intelligence/data/correlation_matrix.json"

# Output Format Mappings (handled automatically by workflow_data_integration.py):
# Trading workflows â†’ TradeSignalData
# Risk workflows â†’ RiskAssessment  
# News workflows â†’ NewsSentiment
# Analysis workflows â†’ MarketAnalysis
# ML workflows â†’ MLFeatures
