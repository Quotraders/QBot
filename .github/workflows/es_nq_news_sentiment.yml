name: ES/NQ Futures News Sentiment
on:
  schedule:
  - cron: '*/10 13-21 * * 1-5'
  - cron: '*/30 0-12,22-23 * * 1-5'
  - cron: 0 */2 * * 0
  - cron: '*/30 22-23 * * 0'
  workflow_dispatch: null

jobs:
  analyze-futures-news:
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
        fetch-depth: 1
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        cache: pip
    - name: Install dependencies
      run: 'python -m pip install --upgrade pip

        pip install feedparser textblob requests beautifulsoup4 pandas numpy

        '
    - name: Analyze ES/NQ News
      run: "python << 'EOF'\nimport feedparser\nimport requests\nfrom textblob import\
        \ TextBlob\nimport json\nimport os\nfrom datetime import datetime\nimport\
        \ logging\n\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\
        \n# ES/NQ specific news sources\nfeeds = {\n    'bloomberg': 'https://feeds.bloomberg.com/markets/news.rss',\n\
        \    'reuters': 'https://feeds.reuters.com/reuters/businessNews',\n    'marketwatch':\
        \ 'https://feeds.marketwatch.com/marketwatch/topstories/',\n    'cnbc': 'https://search.cnbc.com/rs/search/combined.do?partnerId=wrss01&id=15839069'\n\
        }\n\nes_keywords = ['S&P', 'SPX', 'ES futures', 'e-mini', 'stock index', 'SPY',\
        \ 'equity index']\nnq_keywords = ['Nasdaq', 'NQ futures', 'tech stocks', 'QQQ',\
        \ 'technology sector', 'FAANG', 'tech earnings']\n\nsentiment_data = {\n \
        \   'timestamp': datetime.utcnow().isoformat(),\n    'ES': {'sentiment': 0,\
        \ 'articles': [], 'signal': 'NEUTRAL'},\n    'NQ': {'sentiment': 0, 'articles':\
        \ [], 'signal': 'NEUTRAL'}\n}\n\nfor source, url in feeds.items():\n    try:\n\
        \        logger.info(f\"Processing {source}...\")\n        feed = feedparser.parse(url)\n\
        \        \n        for entry in feed.entries[:10]:\n            title = entry.title\n\
        \            summary = entry.get('summary', '')\n            full_text = f\"\
        {title} {summary}\".lower()\n            \n            # Sentiment analysis\n\
        \            try:\n                blob = TextBlob(full_text)\n          \
        \      sentiment = blob.sentiment.polarity\n            except:\n        \
        \        sentiment = 0.0\n            \n            # Categorize for ES or\
        \ NQ\n            is_es = any(kw.lower() in full_text for kw in es_keywords)\n\
        \            is_nq = any(kw.lower() in full_text for kw in nq_keywords)\n\
        \            \n            if sentiment != 0 and (is_es or is_nq):\n     \
        \           article_data = {\n                    'title': title[:100] + '...'\
        \ if len(title) > 100 else title,\n                    'sentiment': sentiment,\n\
        \                    'source': source,\n                    'time': entry.get('published',\
        \ '')\n                }\n                \n                if is_es:\n  \
        \                  sentiment_data['ES']['articles'].append(article_data)\n\
        \                    sentiment_data['ES']['sentiment'] += sentiment\n    \
        \            \n                if is_nq:\n                    sentiment_data['NQ']['articles'].append(article_data)\n\
        \                    sentiment_data['NQ']['sentiment'] += sentiment\n    \
        \                \n    except Exception as e:\n        logger.error(f\"Error\
        \ processing {source}: {e}\")\n        continue\n\n# Calculate average sentiment\
        \ and generate signals\nfor instrument in ['ES', 'NQ']:\n    articles = sentiment_data[instrument]['articles']\n\
        \    if articles:\n        sentiment_data[instrument]['sentiment'] /= len(articles)\n\
        \        \n        # Generate signal\n        avg_sentiment = sentiment_data[instrument]['sentiment']\n\
        \        if avg_sentiment > 0.3:\n            sentiment_data[instrument]['signal']\
        \ = 'BULLISH'\n        elif avg_sentiment < -0.3:\n            sentiment_data[instrument]['signal']\
        \ = 'BEARISH'\n        else:\n            sentiment_data[instrument]['signal']\
        \ = 'NEUTRAL'\n            \n        # Add article count\n        sentiment_data[instrument]['article_count']\
        \ = len(articles)\n    else:\n        sentiment_data[instrument]['sentiment']\
        \ = 0.0\n        sentiment_data[instrument]['signal'] = 'NEUTRAL'\n      \
        \  sentiment_data[instrument]['article_count'] = 0\n\n# Save data\nos.makedirs('Intelligence/data/news',\
        \ exist_ok=True)\nwith open('Intelligence/data/news/es_nq_sentiment.json',\
        \ 'w') as f:\n    json.dump(sentiment_data, f, indent=2)\n\n# Output summary\n\
        print(f\"\xE2\u0153\u2026 ES/NQ News Sentiment Analysis Complete\")\nprint(f\"\
        \xF0\u0178\u201C\u0160 ES: {sentiment_data['ES']['sentiment']:.3f} ({sentiment_data['ES']['signal']})\
        \ - {sentiment_data['ES']['article_count']} articles\")\nprint(f\"\xF0\u0178\
        \u201C\u0160 NQ: {sentiment_data['NQ']['sentiment']:.3f} ({sentiment_data['NQ']['signal']})\
        \ - {sentiment_data['NQ']['article_count']} articles\")\n\n# Create summary\
        \ for GitHub\nsummary = {\n    'status': 'success',\n    'timestamp': datetime.utcnow().isoformat(),\n\
        \    'ES_signal': sentiment_data['ES']['signal'],\n    'NQ_signal': sentiment_data['NQ']['signal'],\n\
        \    'ES_sentiment': sentiment_data['ES']['sentiment'],\n    'NQ_sentiment':\
        \ sentiment_data['NQ']['sentiment']\n}\n\nwith open('Intelligence/data/news/sentiment_summary.json',\
        \ 'w') as f:\n    json.dump(summary, f, indent=2)\n\nEOF\n"
    - name: Commit Sentiment Data
      run: "git config --global user.email \"ml-bot@github.com\"\ngit config --global\
        \ user.name \"ML Bot\"\ngit add Intelligence/data/news/ || true\ngit commit\
        \ -m \"\xF0\u0178\u201C\xB0 Update ES/NQ news sentiment - $(date -u '+%Y-%m-%d\
        \ %H:%M UTC')\" || true\ngit push --force-with-lease || true"
    timeout-minutes: 15