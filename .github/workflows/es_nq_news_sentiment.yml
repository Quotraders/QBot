name: ES/NQ Futures News Sentiment

on:
  schedule:
    - cron: '*/5 6-22 * * *'  # Every 5 min during market hours
  workflow_dispatch:

jobs:
  analyze-futures-news:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install feedparser textblob requests beautifulsoup4 pandas numpy
    
    - name: Analyze ES/NQ News
      run: |
        python << 'EOF'
        import feedparser
        import requests
        from textblob import TextBlob
        import json
        import os
        from datetime import datetime
        import logging
        
        logging.basicConfig(level=logging.INFO)
        logger = logging.getLogger(__name__)
        
        # ES/NQ specific news sources
        feeds = {
            'bloomberg': 'https://feeds.bloomberg.com/markets/news.rss',
            'reuters': 'https://feeds.reuters.com/reuters/businessNews',
            'marketwatch': 'https://feeds.marketwatch.com/marketwatch/topstories/',
            'cnbc': 'https://search.cnbc.com/rs/search/combined.do?partnerId=wrss01&id=15839069'
        }
        
        es_keywords = ['S&P', 'SPX', 'ES futures', 'e-mini', 'stock index', 'SPY', 'equity index']
        nq_keywords = ['Nasdaq', 'NQ futures', 'tech stocks', 'QQQ', 'technology sector', 'FAANG', 'tech earnings']
        
        sentiment_data = {
            'timestamp': datetime.utcnow().isoformat(),
            'ES': {'sentiment': 0, 'articles': [], 'signal': 'NEUTRAL'},
            'NQ': {'sentiment': 0, 'articles': [], 'signal': 'NEUTRAL'}
        }
        
        for source, url in feeds.items():
            try:
                logger.info(f"Processing {source}...")
                feed = feedparser.parse(url)
                
                for entry in feed.entries[:10]:
                    title = entry.title
                    summary = entry.get('summary', '')
                    full_text = f"{title} {summary}".lower()
                    
                    # Sentiment analysis
                    try:
                        blob = TextBlob(full_text)
                        sentiment = blob.sentiment.polarity
                    except:
                        sentiment = 0.0
                    
                    # Categorize for ES or NQ
                    is_es = any(kw.lower() in full_text for kw in es_keywords)
                    is_nq = any(kw.lower() in full_text for kw in nq_keywords)
                    
                    if sentiment != 0 and (is_es or is_nq):
                        article_data = {
                            'title': title[:100] + '...' if len(title) > 100 else title,
                            'sentiment': sentiment,
                            'source': source,
                            'time': entry.get('published', '')
                        }
                        
                        if is_es:
                            sentiment_data['ES']['articles'].append(article_data)
                            sentiment_data['ES']['sentiment'] += sentiment
                        
                        if is_nq:
                            sentiment_data['NQ']['articles'].append(article_data)
                            sentiment_data['NQ']['sentiment'] += sentiment
                            
            except Exception as e:
                logger.error(f"Error processing {source}: {e}")
                continue
        
        # Calculate average sentiment and generate signals
        for instrument in ['ES', 'NQ']:
            articles = sentiment_data[instrument]['articles']
            if articles:
                sentiment_data[instrument]['sentiment'] /= len(articles)
                
                # Generate signal
                avg_sentiment = sentiment_data[instrument]['sentiment']
                if avg_sentiment > 0.3:
                    sentiment_data[instrument]['signal'] = 'BULLISH'
                elif avg_sentiment < -0.3:
                    sentiment_data[instrument]['signal'] = 'BEARISH'
                else:
                    sentiment_data[instrument]['signal'] = 'NEUTRAL'
                    
                # Add article count
                sentiment_data[instrument]['article_count'] = len(articles)
            else:
                sentiment_data[instrument]['sentiment'] = 0.0
                sentiment_data[instrument]['signal'] = 'NEUTRAL'
                sentiment_data[instrument]['article_count'] = 0
        
        # Save data
        os.makedirs('Intelligence/data/news', exist_ok=True)
        with open('Intelligence/data/news/es_nq_sentiment.json', 'w') as f:
            json.dump(sentiment_data, f, indent=2)
        
        # Output summary
        print(f"âœ… ES/NQ News Sentiment Analysis Complete")
        print(f"ðŸ“Š ES: {sentiment_data['ES']['sentiment']:.3f} ({sentiment_data['ES']['signal']}) - {sentiment_data['ES']['article_count']} articles")
        print(f"ðŸ“Š NQ: {sentiment_data['NQ']['sentiment']:.3f} ({sentiment_data['NQ']['signal']}) - {sentiment_data['NQ']['article_count']} articles")
        
        # Create summary for GitHub
        summary = {
            'status': 'success',
            'timestamp': datetime.utcnow().isoformat(),
            'ES_signal': sentiment_data['ES']['signal'],
            'NQ_signal': sentiment_data['NQ']['signal'],
            'ES_sentiment': sentiment_data['ES']['sentiment'],
            'NQ_sentiment': sentiment_data['NQ']['sentiment']
        }
        
        with open('Intelligence/data/news/sentiment_summary.json', 'w') as f:
            json.dump(summary, f, indent=2)
        
        EOF
    
    - name: Commit Sentiment Data
      run: |
        git config --global user.email "ml-bot@github.com"
        git config --global user.name "ML Bot"
        git add Intelligence/data/news/ || true
        git commit -m "ðŸ“° Update ES/NQ news sentiment - $(date -u '+%Y-%m-%d %H:%M UTC')" || true
        git push --force-with-lease || true