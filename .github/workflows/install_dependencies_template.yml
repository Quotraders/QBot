name: Universal Dependency Installation Template

# This workflow provides a reusable template for installing all dependencies
# Copy these steps to any workflow that needs ML/TA dependencies

on:
  workflow_call:

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          /usr/lib/libta_lib*
          /usr/include/ta-lib/
        key: ${{ runner.os }}-comprehensive-deps-${{ hashFiles('**/requirements*.txt') }}
    
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget tar build-essential
    
    - name: Install TA-Lib C Library (CRITICAL FIX)
      run: |
        if [ ! -f /usr/lib/libta_lib.so ]; then
          echo "üìä Installing TA-Lib C library from source..."
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/usr
          make
          sudo make install
          cd ..
          sudo ldconfig
          echo "‚úÖ TA-Lib C library installed successfully"
        else
          echo "‚úÖ TA-Lib C library already cached"
        fi
    
    - name: Install Complete Python Dependencies
      run: |
        pip install --upgrade pip
        
        # Core dependencies
        pip install numpy pandas scipy
        
        # TA-Lib Python wrapper (AFTER C library)
        pip install TA-Lib
        
        # Backup technical analysis libraries
        pip install ta pandas-ta
        
        # Data collection
        pip install yfinance feedparser requests beautifulsoup4
        
        # ML/RL dependencies
        pip install scikit-learn torch onnx onnxruntime
        pip install xgboost lightgbm catboost optuna
        
        # Additional utilities (optional, with error handling)
        pip install textblob vaderSentiment || echo "‚ö†Ô∏è Sentiment libraries optional"
        pip install pytrends || echo "‚ö†Ô∏è Trends library optional"
        pip install fredapi || echo "‚ö†Ô∏è FRED API optional"
        
    - name: Verify Installation
      run: |
        echo "üß™ Testing critical dependencies..."
        python -c "
import pandas as pd
import numpy as np
print('‚úÖ Core: pandas, numpy')

try:
    import talib
    print('‚úÖ TA-Lib: Main library working')
except ImportError as e:
    print(f'‚ùå TA-Lib: {e}')

try:
    import ta
    print('‚úÖ ta: Backup library working')
except ImportError as e:
    print(f'‚ùå ta: {e}')

try:
    import yfinance as yf
    print('‚úÖ yfinance: Data collection working')
except ImportError as e:
    print(f'‚ùå yfinance: {e}')

print('üéâ Dependency verification complete!')
"

# USAGE INSTRUCTIONS:
# Copy the steps from 'Setup Python' through 'Verify Installation' 
# to any workflow that needs comprehensive dependencies.
#
# This template ensures:
# 1. TA-Lib C library is compiled before Python wrapper
# 2. Backup libraries (ta, pandas-ta) are available
# 3. All dependencies are cached for faster subsequent runs
# 4. Installation is verified before proceeding