name: "Cloud ML Training Pipeline"

on:
  schedule:
    - cron: '*/30 13-20 * * 1-5'  # Every 30 min during market hours
    - cron: '0 */4 * * *'         # Every 4 hours off-hours
  workflow_dispatch:
  push:
    branches: ['main']

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  cloud-training:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: "📥 Checkout Code"
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0
        
      - name: "🐍 Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: "📦 Install ML Dependencies"
        run: |
          pip install --upgrade pip
          pip install torch torchvision numpy pandas
          pip install stable-baselines3
          pip install scikit-learn matplotlib joblib
          
      - name: "📊 Prepare Training Data"
        run: |
          mkdir -p Intelligence/data/training models/rl
          python -c "
          import pandas as pd
          import numpy as np
          from datetime import datetime
          
          # Create synthetic training data
          data = pd.DataFrame({
              'timestamp': pd.date_range('2024-01-01', periods=1000, freq='5min'),
              'price': np.random.randn(1000).cumsum() + 4500,
              'volume': np.random.randint(1000, 10000, 1000),
              'returns': np.random.randn(1000) * 0.01,
              'volatility': np.random.exponential(0.02, 1000)
          })
          
          data.to_csv('Intelligence/data/training/data.csv', index=False)
          print(f'Created training data with {len(data)} samples')
          "
          
      - name: "🤖 Train Models"
        run: |
          echo "Training CVaR PPO model..."
          python ml/rl/train_cvar_ppo.py --data Intelligence/data/training/data.csv --save_dir models/rl/
          
      - name: "📦 Package and Upload Models"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd models
          timestamp=$(date +%Y%m%d-%H%M)
          tar -czf models-${timestamp}.tar.gz rl/ 2>/dev/null || echo "No models found"
          
          if [ -f "models-${timestamp}.tar.gz" ]; then
            tag="cloud-training-${timestamp}"
            gh release create "$tag" \
              --title "🤖 Cloud Training - $(date)" \
              --notes "Automated cloud training run. Models updated every 6 hours." \
              "models-${timestamp}.tar.gz" || echo "Release creation failed"
          fi
          
      - name: "✅ Training Summary"
        run: |
          echo "🎯 Cloud training completed successfully!"
          echo "📈 Models packaged and uploaded"
          echo "🔄 Next training in 6 hours"
