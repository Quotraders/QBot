name: .NET Core Desktop
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
permissions:
  contents: write
  pull-requests: write
  actions: read
jobs:
  build:
    strategy:
      matrix:
      - Debug
      - Release
    timeout-minutes: 30
    env:
      Solution_Name: your-solution-name
      Test_Project_Path: your-test-project-path
      Wap_Project_Directory: your-wap-project-directory-name
      Wap_Project_Path: your-wap-project-path
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
        fetch-depth: 0
        with: null
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with: null
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2
    - name: Execute unit tests
      run: dotnet test
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env: null
    - name: Decode the pfx
      run: '$pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx
        }}")

        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx

        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

        '
    - name: Create the app package
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode
        /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx
        /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
    - name: Remove the pfx
      run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
    runs-on: ubuntu-latest
'on':
  workflow_dispatch: {}
