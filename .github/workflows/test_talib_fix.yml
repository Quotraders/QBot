name: "\U0001F9EA Test TA-Lib Installation Fix"
true:
  workflow_dispatch:
    inputs:
      test_type:
        description: Type of test to run
        required: false
        default: full
        type: choice
        options:
        - full
        - quick
        - dependencies_only
permissions:
  contents: write
  pull-requests: write
  actions: read
jobs:
  test-talib-fix:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: "\U0001F4E5 Checkout Code"
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
        fetch-depth: 0
    - name: "\U0001F40D Setup Python"
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: pip
    - name: "\U0001F4BE Cache TA-Lib Dependencies"
      uses: actions/cache@v3
      with:
        path: '~/.cache/pip

          /usr/lib/libta_lib*

          /usr/include/ta-lib/

          '
        key: ${{ runner.os }}-talib-test-${{ hashFiles('**/requirements*.txt') }}
    - name: "\U0001F527 Install System Dependencies"
      run: 'sudo apt-get update

        sudo apt-get install -y wget tar build-essential

        '
    - name: "\U0001F4CA Install TA-Lib C Library"
      run: "if [ ! -f /usr/lib/libta_lib.so ]; then\n  echo \"Installing TA-Lib C\
        \ library from source...\"\n  wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz\n\
        \  tar -xzf ta-lib-0.4.0-src.tar.gz\n  cd ta-lib/\n  ./configure --prefix=/usr\n\
        \  make\n  sudo make install\n  cd ..\n  sudo ldconfig\n  echo \"\u2705 TA-Lib\
        \ C library installed successfully\"\nelse\n  echo \"\u2705 TA-Lib C library\
        \ already cached\"\nfi\n"
    - name: "\U0001F4E6 Install Python Dependencies"
      run: 'pip install --retry-delays 1,2,3 --timeout 60 --upgrade pip

        pip install --retry-delays 1,2,3 --timeout 60 numpy pandas

        # Install TA-Lib Python wrapper

        pip install --retry-delays 1,2,3 --timeout 60 TA-Lib

        # Install backup libraries

        pip install --retry-delays 1,2,3 --timeout 60 ta pandas-ta

        '
    - name: "\U0001F9EA Test TA-Lib Installation"
      run: "echo \"==========================================\"\necho \"\U0001F9EA\
        \ TESTING TA-LIB INSTALLATION\"\necho \"==========================================\"\
        \n\necho \"Test 1: Import TA-Lib\"\npython -c \"import talib; print('\u2705\
        \ TA-Lib imported successfully')\" || echo \"\u274C TA-Lib import failed\"\
        \n\necho \"Test 2: Test basic TA-Lib function\"\npython -c \"\nimport talib\n\
        import numpy as np\nprices = np.random.randn(100) + 100\nsma = talib.SMA(prices,\
        \ 20)\nprint(f'\u2705 TA-Lib SMA calculation successful: {sma[-1]:.2f}')\n\
        \" || echo \"\u274C TA-Lib function test failed\"\n\necho \"Test 3: Test backup\
        \ library 'ta'\"\npython -c \"\nimport ta\nimport pandas as pd\nimport numpy\
        \ as np\ndf = pd.DataFrame({'close': np.random.randn(100) + 100})\nrsi = ta.momentum.RSIIndicator(df['close']).rsi()\n\
        print(f'\u2705 Backup ta library working: RSI = {rsi.iloc[-1]:.2f}')\n\" ||\
        \ echo \"\u274C Backup 'ta' library test failed\"\n\necho \"Test 4: Test backup\
        \ library 'pandas_ta'\"\npython -c \"\nimport pandas_ta as pta\nimport pandas\
        \ as pd\nimport numpy as np\ndf = pd.DataFrame({'close': np.random.randn(100)\
        \ + 100})\nrsi = pta.rsi(df['close'])\nprint(f'\u2705 Backup pandas_ta library\
        \ working: RSI = {rsi.iloc[-1]:.2f}')\n\" || echo \"\u274C Backup 'pandas_ta'\
        \ library test failed\"\n"
    - name: "\u2705 Test Summary"
      run: "echo \"==========================================\"\necho \"\U0001F389\
        \ TA-LIB INSTALLATION TEST COMPLETE\"\necho \"==========================================\"\
        \necho \"If you see \u2705 symbols above, the fix is working!\"\necho \"If\
        \ you see \u274C symbols, there may still be issues.\"\necho \"\"\necho \"\
        The key indicators of success:\"\necho \"- \u2705 TA-Lib imported successfully\"\
        \necho \"- \u2705 TA-Lib SMA calculation successful\"\necho \"- At least one\
        \ backup library working\"\necho \"\"\necho \"This validates that the TA-Lib\
        \ installation\"\necho \"fix in the main workflows will work correctly.\""
