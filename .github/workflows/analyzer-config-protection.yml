name: Analyzer Configuration Protection

on:
  pull_request:
    paths:
      - '**/*.cs'
      - '.editorconfig'
      - 'Directory.Build.props'
      - 'GlobalSuppressions.cs'
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.cs'
      - '.editorconfig' 
      - 'Directory.Build.props'
      - 'GlobalSuppressions.cs'

jobs:
  protect-analyzer-config:
    name: Protect Analyzer Configuration from Tampering
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check for unauthorized analyzer config changes
        run: |
          echo "üîç Checking for unauthorized analyzer configuration changes..."
          
          # Check if protected files were modified (only fail if they exist and were changed)
          if git diff --name-only origin/main...HEAD | grep -E '^(\.editorconfig|Directory\.Build\.props)$'; then
            echo "‚ùå CRITICAL: Analyzer configuration files have been modified without authorization!"
            echo "Files .editorconfig and Directory.Build.props are protected by CODEOWNERS."
            echo "Only @kevinsuero072897-collab can approve changes to these files."
            echo "This ensures analyzer strict mode cannot be weakened or bypassed."
            exit 1
          fi
          
          echo "‚úÖ No unauthorized analyzer configuration changes detected."
          
      - name: Check for suppression patterns in codebase
        run: |
          echo "üîç Scanning for analyzer suppression patterns..."
          
          # Check for pragma warning suppressions
          if find . -name "*.cs" -not -path "./.git/*" -exec grep -l "#pragma warning disable" {} \; | head -1; then
            echo "‚ùå CRITICAL: Pragma warning suppressions detected!"
            echo "Found files with '#pragma warning disable' patterns:"
            find . -name "*.cs" -not -path "./.git/*" -exec grep -l "#pragma warning disable" {} \;
            echo "All analyzer violations must be fixed through code improvements, not suppressions."
            exit 1
          fi
          
          # Check for SuppressMessage attributes
          if find . -name "*.cs" -not -path "./.git/*" -exec grep -l "SuppressMessage" {} \; | head -1; then
            echo "‚ùå CRITICAL: SuppressMessage attributes detected!"
            echo "Found files with 'SuppressMessage' attributes:"
            find . -name "*.cs" -not -path "./.git/*" -exec grep -l "SuppressMessage" {} \;
            echo "All analyzer violations must be fixed through code improvements, not suppressions."
            exit 1
          fi
          
          # Check for GlobalSuppressions.cs
          if find . -name "GlobalSuppressions.cs" -not -path "./.git/*" | head -1; then
            echo "‚ùå CRITICAL: GlobalSuppressions.cs file detected!"
            echo "Found GlobalSuppressions.cs files:"
            find . -name "GlobalSuppressions.cs" -not -path "./.git/*"
            echo "Global suppressions are not allowed - this file should not exist."
            exit 1
          fi
          
          # Check for dotnet_diagnostic severity overrides set to none/silent
          if find . -name ".editorconfig" -exec grep -l "dotnet_diagnostic.*severity.*=.*\(none\|silent\)" {} \; | head -1; then
            echo "‚ùå CRITICAL: Analyzer rules disabled in .editorconfig!"
            echo "Found .editorconfig files with disabled analyzer rules:"
            find . -name ".editorconfig" -exec grep -l "dotnet_diagnostic.*severity.*=.*\(none\|silent\)" {} \;
            echo "All analyzer rules must remain active and set to 'error' severity."
            exit 1
          fi
          
          echo "‚úÖ No analyzer suppression patterns detected."
          
      - name: Verify analyzer strict mode configuration
        run: |
          echo "üîç Verifying analyzer strict mode is properly configured..."
          
          # Check Directory.Build.props has required settings
          if [ -f "Directory.Build.props" ]; then
            if ! grep -q "<TreatWarningsAsErrors>true</TreatWarningsAsErrors>" Directory.Build.props; then
              echo "‚ùå CRITICAL: TreatWarningsAsErrors not set to true in Directory.Build.props"
              exit 1
            fi
            
            if ! grep -q "<EnableNETAnalyzers>true</EnableNETAnalyzers>" Directory.Build.props; then
              echo "‚ùå CRITICAL: EnableNETAnalyzers not set to true in Directory.Build.props"
              exit 1
            fi
            
            if ! grep -q "<AnalysisMode>AllEnabledByDefault</AnalysisMode>" Directory.Build.props; then
              echo "‚ùå CRITICAL: AnalysisMode not set to AllEnabledByDefault in Directory.Build.props"
              exit 1
            fi
            
            echo "‚úÖ Directory.Build.props has correct analyzer strict mode settings."
          else
            echo "‚ö†Ô∏è Directory.Build.props not found - this may be intentional for some repositories."
          fi
          
      - name: Summary
        run: |
          echo "üõ°Ô∏è ANALYZER PROTECTION SUMMARY:"
          echo "‚úÖ No unauthorized configuration changes detected"
          echo "‚úÖ No suppression patterns found in codebase"  
          echo "‚úÖ Analyzer strict mode configuration verified"
          echo "üîí Analyzer enforcement remains in maximum strict mode"
          echo ""
          echo "‚ÑπÔ∏è Remember: All analyzer violations must be fixed through code quality"
          echo "   improvements, not by modifying rules or adding suppressions."